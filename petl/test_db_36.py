# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import db as module_0


def test_case_0():
    int_0 = -2408
    var_0 = module_0.fromdb(int_0, int_0)
    assert f"{type(var_0).__module__}.{type(var_0).__qualname__}" == "db.DbView"
    assert var_0.dbo == -2408
    assert var_0.query == -2408
    assert var_0.args == ()
    assert var_0.kwargs == {}
    assert module_0.SQL_TRUNCATE_QUERY == "DELETE FROM %s"
    assert module_0.SQL_INSERT_QUERY == "INSERT INTO %s (%s) VALUES (%s)"


@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = -3142
    var_0 = module_0.fromdb(int_0, int_0)
    assert f"{type(var_0).__module__}.{type(var_0).__qualname__}" == "db.DbView"
    assert var_0.dbo == -3142
    assert var_0.query == -3142
    assert var_0.args == ()
    assert var_0.kwargs == {}
    assert module_0.SQL_TRUNCATE_QUERY == "DELETE FROM %s"
    assert module_0.SQL_INSERT_QUERY == "INSERT INTO %s (%s) VALUES (%s)"
    module_0.todb(var_0, var_0, var_0, commit=var_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    float_0 = 605.3
    module_0.todb(
        float_0,
        float_0,
        float_0,
        create=float_0,
        constraints=float_0,
        dialect=float_0,
        sample=float_0,
    )


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = -3142
    module_0.todb(int_0, int_0, int_0, commit=int_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "\\?\r0_f\tL*YFN\t"
    module_0.appenddb(str_0, str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    bytes_0 = b"\xd3EW:\x87oL#tsd)\x0b"
    module_0.appenddb(bytes_0, bytes_0, bytes_0)


def test_case_6():
    str_0 = "WNJiN|A:Wt8"
    var_0 = module_0.fromdb(str_0, str_0)
    assert f"{type(var_0).__module__}.{type(var_0).__qualname__}" == "db.DbView"
    assert var_0.query == "WNJiN|A:Wt8"
    assert var_0.args == ()
    assert var_0.kwargs == {}
    assert module_0.SQL_TRUNCATE_QUERY == "DELETE FROM %s"
    assert module_0.SQL_INSERT_QUERY == "INSERT INTO %s (%s) VALUES (%s)"


@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "\\?\r0_f\tL*YFN\t"
    module_0.todb(str_0, str_0, str_0, create=str_0, constraints=str_0, metadata=str_0)


@pytest.mark.xfail(strict=True)
def test_case_8():
    str_0 = "EeEdR2|VpZI.D? "
    module_0.todb(str_0, str_0, str_0, drop=str_0, dialect=str_0)


@pytest.mark.xfail(strict=True)
def test_case_9():
    str_0 = ""
    var_0 = module_0.fromdb(str_0, str_0)
    assert f"{type(var_0).__module__}.{type(var_0).__qualname__}" == "db.DbView"
    assert var_0.query == ""
    assert var_0.args == ()
    assert var_0.kwargs == {}
    assert module_0.SQL_TRUNCATE_QUERY == "DELETE FROM %s"
    assert module_0.SQL_INSERT_QUERY == "INSERT INTO %s (%s) VALUES (%s)"
    module_0.todb(str_0, var_0, var_0, create=str_0)


@pytest.mark.xfail(strict=True)
def test_case_10():
    int_0 = -3142
    module_0.todb(int_0, int_0, int_0, int_0, create=int_0, drop=int_0)


@pytest.mark.xfail(strict=True)
def test_case_11():
    str_0 = "EeEdR2|VpZIGD? "
    module_0.appenddb(str_0, str_0, str_0, str_0)
