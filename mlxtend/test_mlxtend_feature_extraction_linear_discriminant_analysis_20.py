# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import mlxtend.feature_extraction.linear_discriminant_analysis as module_0


def test_case_0():
    bool_0 = False
    with pytest.raises(AttributeError):
        module_0.LinearDiscriminantAnalysis(bool_0)


def test_case_1():
    linear_discriminant_analysis_0 = module_0.LinearDiscriminantAnalysis()
    assert (
        f"{type(linear_discriminant_analysis_0).__module__}.{type(linear_discriminant_analysis_0).__qualname__}"
        == "mlxtend.feature_extraction.linear_discriminant_analysis.LinearDiscriminantAnalysis"
    )
    assert linear_discriminant_analysis_0.n_discriminants is None


def test_case_2():
    linear_discriminant_analysis_0 = module_0.LinearDiscriminantAnalysis()
    assert (
        f"{type(linear_discriminant_analysis_0).__module__}.{type(linear_discriminant_analysis_0).__qualname__}"
        == "mlxtend.feature_extraction.linear_discriminant_analysis.LinearDiscriminantAnalysis"
    )
    assert linear_discriminant_analysis_0.n_discriminants is None
    with pytest.raises(AttributeError):
        linear_discriminant_analysis_0.transform(linear_discriminant_analysis_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    linear_discriminant_analysis_0 = module_0.LinearDiscriminantAnalysis()
    assert (
        f"{type(linear_discriminant_analysis_0).__module__}.{type(linear_discriminant_analysis_0).__qualname__}"
        == "mlxtend.feature_extraction.linear_discriminant_analysis.LinearDiscriminantAnalysis"
    )
    assert linear_discriminant_analysis_0.n_discriminants is None
    linear_discriminant_analysis_1 = module_0.LinearDiscriminantAnalysis()
    assert linear_discriminant_analysis_1.n_discriminants is None
    linear_discriminant_analysis_1.fit(
        linear_discriminant_analysis_0,
        linear_discriminant_analysis_1,
        linear_discriminant_analysis_0,
    )


def test_case_4():
    bool_0 = True
    linear_discriminant_analysis_0 = module_0.LinearDiscriminantAnalysis(bool_0)
    assert (
        f"{type(linear_discriminant_analysis_0).__module__}.{type(linear_discriminant_analysis_0).__qualname__}"
        == "mlxtend.feature_extraction.linear_discriminant_analysis.LinearDiscriminantAnalysis"
    )
    assert linear_discriminant_analysis_0.n_discriminants is True
    linear_discriminant_analysis_1 = module_0.LinearDiscriminantAnalysis()
    with pytest.raises(AttributeError):
        bool_0.transform(linear_discriminant_analysis_1)
